#include<stdio.h>
#include<string.h>
#include<stdlib.h>

char push(char x);
char pop();
int prio(char x);
int peek();
int evaluate(char x,int opf,int ops);
int st[100],top=-1,t;


char push(char x)
{
   top++;
   st[top]=x;
   return st[top];
}

char pop()
{
   if(top==-1)
   {
      return -1;
   }
   else
   {
      t=st[top];
      top--;
      return t;
   }
}


int prio(char x)
{
   if(x=='(')
   {
      return 0;
   }
   else if(x=='+' || x=='-')
   {
      return 1;
   }
   else if(x=='*' || x=='/')
   {
      return 2;
   }
   else if(x=='^')
   { 
      return 3;
   }

}

int peek()
{
   return st[top];
}

int evaluate(char x,int opf,int ops)
{
   if(x=='+')
   {
      return (opf+ops);
   }
   else if(x=='-')
   {
      return (opf-ops);
   }
   else if(x=='*')
   {
      return (opf*ops);
   }
   else if(x=='/')
   {
      return (opf/ops);
   }
   else if(x=='^')
   {
      return (opf^ops);
   }
}

void main()
{
   int k=0,i=0,l=0,j=0,op1,op2,res;
   char in[100],post[100];
   char s,c,r;
   printf("Enter the infix expression");
   scanf("%s",in);
   l=strlen(in);
   while(i<l)
   {
      c=in[i];
      i++;
      if(c=='(')
      {
          push(c);
      }
      else if(c==')')
      {

         while(s!='(')
         {
            s =pop();
            if(s==')' || s=='(')
            {
                break;
             }
            else
            {
                 post[j]=s;
                 j++;
                 printf("%c",s);
            }
         }
      }
     else if(isalnum(c))
      {
          printf("%c",c);
          post[j]=c;
          j++;
      }

      else
      {
         while(prio(peek())>prio(c))
         {
//            printf("%d%d",prio(st[top]),prio(c));
            s = pop();
            if(s=='(' || s==')')
            {
               break;
            }
            else
            {
                printf("%c",s);
                post[j]=s;
                j++;
            }
         }
         push(c);
       }
    }
    while(top!=-1)
   {
       s= pop();
       if(s=='(' || s==')')
       {
          break;
       }
       else
       {
           post[j]=s;
           j++;
           printf("%c",s);

       }
       }

   for(k=0;k<j;k++)
   {
      r = post[k];
   }

   for(k=0;k<j;k++)
   {
      r = post[k];
      if(isdigit(r))
      {
          push(r-48);
      }
      else
      {
         op2=pop();
         op1=pop();
         res = evaluate(r,op1,op2);
         push(res);
      }
   }
   printf("\nThe evaluated value is:%d",res);
   printf("\n");

}

